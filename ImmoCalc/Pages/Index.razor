@page "/"
@using ImmoCalc.Stores.Projects
@inherits BlazorState.BlazorStateComponent
@inject NavigationManager Navigation;

<ion-header translucent>
    <ion-toolbar mode="ios">
        <ion-title>Mes projets</ion-title>
    </ion-toolbar>
</ion-header>

<ion-content>

    @if (false) {
        <h1>Loading...</h1>
    }
    else {
        <ion-refresher on-refresh="alert('coucou')" pulling-text="Pull to refresh..." />

        <ion-list>
            @foreach (var project in State.ProjectList) {
                <ion-item-sliding>
                    <ion-item detail button @onclick="@Clicked">
                        <ion-icon slot="start" name="home-outline"></ion-icon>
                        <ion-label>
                            <h2>@project.Label</h2>
                            <h3>@project.Address</h3>
                        </ion-label>
                    </ion-item>
                    <ion-item-options side="end">
                        <ion-item-option color="tertiary">Rename</ion-item-option>
                        <ion-item-option color="danger">Remove</ion-item-option>
                    </ion-item-options>
                </ion-item-sliding>
            }

            @*<ion-item-sliding>
                    <ion-item detail button>
                        <ion-icon slot="start" name="home-outline"></ion-icon>
                        <ion-label>
                            <h2>Finn</h2>
                            <h3>I'm a big deal</h3>
                        </ion-label>
                    </ion-item>
                    <ion-item-options side="end">
                        <ion-item-option color="danger" onClick="unread(item)">Remove</ion-item-option>
                    </ion-item-options>
                </ion-item-sliding>

                <ion-item-sliding>
                    <ion-item detail button>
                        <ion-icon slot="start" name="home-outline"></ion-icon>
                        <ion-label>
                            <h2>Finn</h2>
                            <h3>I'm a big deal</h3>
                        </ion-label>
                    </ion-item>
                    <ion-item-options side="end">
                        <ion-item-option color="danger" onClick="unread(item)">Remove</ion-item-option>
                    </ion-item-options>
                </ion-item-sliding>

                <ion-item-sliding>
                    <ion-item detail button>
                        <ion-icon slot="start" name="home-outline"></ion-icon>
                        <ion-label>
                            <h2>Finn</h2>
                            <h3>I'm a big deal</h3>
                        </ion-label>
                    </ion-item>
                    <ion-item-options side="end">
                        <ion-item-option color="danger" onClick="unread(item)">Remove</ion-item-option>
                    </ion-item-options>
                </ion-item-sliding>*@
        </ion-list>

    }


    <ion-fab slot="fixed" vertical="bottom" horizontal="end">
        <ion-fab-button @onclick="@Load">
            <ion-icon name="add"></ion-icon>
        </ion-fab-button>
    </ion-fab>
</ion-content>

@code
{
    private ProjectsState State => Store.GetState<ProjectsState>();

    private void Clicked() {
        Navigation.NavigateTo("simulator");
    }

    protected override void OnInitialized()
    {
        Subscriptions.Add<ProjectsState>(this);
        base.OnInitialized();
    }

    private void Load()
    {
        Mediator.Send(new ProjectsState.LoadProjectList());
    }
}

