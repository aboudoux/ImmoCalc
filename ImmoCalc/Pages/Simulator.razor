@page "/simulator"
@inject NavigationManager Navigation
@using ImmoCalc.Stores.CurrentProject
@using ImmoCalc.Components.Converters
@using ImmoCalc.Domain
@inherits BlazorState.BlazorStateComponent

<ion-header>
    <ion-toolbar mode="ios">
        <ion-buttons slot="start">
            <ion-back-button default-href="/" @onclick="@GoBack">Back</ion-back-button>
        </ion-buttons>
        <ion-title>Simulation</ion-title>
    </ion-toolbar>
</ion-header>

<ion-content scroll-y="false" style="--background: #f3f3f3;">
    <ion-slides pager="true" style="height: 55%;">
        <ion-slide>
            <ion-content>
                <ion-title><ion-icon name="business-outline"></ion-icon>Informations sur le bien</ion-title>
                <TextInput Placeholder="Nom" @bind-Value="@_projectName.Value" Converter="@_projectName.Converter"></TextInput>
                <TextInput Placeholder="Adresse" @bind-Value="@_address.Value" Converter="@_address.Converter"></TextInput>
                <div class="form-group" style="margin-left: 10px; margin-right: 10px;">
                    <AmountInput Label="Surface" Currency="m²" @bind-Value="@_surface.Value" Converter="@_surface.Converter"></AmountInput>
                </div>

                    @*<div class="form-group" style="margin-left: 10px; margin-right: 10px;">
                <textarea class="form-control form-control-lg" id="exampleFormControlTextarea1" rows="5" placeholder="Adresse..."></textarea>
            </div>*@
            </ion-content>
        </ion-slide>

        <ion-slide>
            <ion-content>
                <ion-title><ion-icon name="cash-outline"></ion-icon>Informations sur l'achat</ion-title>
                <div class="form-group">
                    <AmountInput Label="Prix d'achat" Currency="€" @bind-Value="@_buyingPrice.Value" Converter="@_buyingPrice.Converter"></AmountInput>
                </div>
                <div class="form-group">
                    <AmountInput Label="Loyer" Currency="€ / mois" @bind-Value="@_monthlyRent.Value" Converter="@_monthlyRent.Converter"></AmountInput>
                </div>
                <div class="form-group">
                    <div style="display: inline-block; width: 160px; margin-left: 39px;">
                        <AmountInput Label="Charges" Currency="€ / mois" @bind-Value="@_charges.Value" Converter="@_charges.Converter"></AmountInput>
                    </div>
                    <label style="font-size: 12px;">Incluses</label>
                    <ion-toggle />
                </div>
                <div class="form-group">
                    <AmountInput Label="Taxe foncière" Currency="€ / an" @bind-Value="@_propertyTax.Value" Converter="@_propertyTax.Converter"></AmountInput>
                </div>
                <div class="form-group">
                    <AmountInput Label="Travaux estimés" @bind-Value="@_renovation.Value" Converter="@_renovation.Converter"></AmountInput>
                </div>

            </ion-content>
        </ion-slide>

        <ion-slide>
            <ion-content>
                <ion-title><ion-icon name="wallet-outline"></ion-icon>Financement</ion-title>
                <div class="form-group">
                    <AmountInput Label="Durée du prêt" Currency="Année(s)" @bind-Value="@_loanDuration.Value" Converter="@_loanDuration.Converter"></AmountInput>
                </div>
                <div class="form-group">
                    <AmountInput Label="Taux du prêt" Currency="%" @bind-Value="@_loanRate.Value" Converter="@_loanRate.Converter"></AmountInput>
                </div>
                <div class="form-group">
                    <AmountInput Label="Taux d'assurance" Currency="%" @bind-Value="@_insuranceRate.Value" Converter="@_insuranceRate.Converter"></AmountInput>
                </div>
                <div class="form-group">
                    <ion-label>Frais de notaire de <strong>30 525€</strong> inclus</ion-label>
                    <ion-toggle />
                </div>
                <div class="form-group">
                    <ion-label>Inclure les travaux</ion-label>
                    <ion-toggle />
                </div>
                <div class="form-group">
                    <ion-label>Montant de l'emprunt : <strong>185 000 €</strong></ion-label>
                </div>
                <div class="form-group">
                    <ion-label>Apport : <strong>18 500 €</strong></ion-label>
                </div>
            </ion-content>
        </ion-slide>
    </ion-slides>
    <ion-content style="border: solid lightgray thin; border-top-left-radius: 10px; border-top-right-radius: 10px;">
        <div class="container" style="margin-top: 20px; background: transparent">
            <div class="row">
                <div class="col-xs-6" style="text-align: center">
                    <label>Cout total : @((string) _amountToStringConverter.Convert(State.Project.PropertyTotalCost)) €</label>
                </div>
                <div class="col-xs-6" style="text-align: center">
                    <label>Prix au m² : @((string) _amountToStringConverter.Convert(State.Project.SquareMeterPrice)) €</label>
                </div>
            </div>
            <div class="row" style="margin-top: 10px;">
                <div class="col-xs-6 col-space">
                    <div class="encare">
                        <div style="margin: 5px;">
                            <label>Revenu : @((string) _amountToStringConverter.Convert(State.Project.MonthlyIncome)) €</label>
                            <label>Mensualités : @((string) _amountToStringConverter.Convert(State.Project.TotalMonthlyPayment)) €</label>
                        </div>
                    </div>
                </div>
                <div class="col-xs-6 col-space">
                    <div class="encare">
                        <div style="margin: 5px;">
                            <label>Gain mensuel : @((string) _amountToStringConverter.Convert(State.Project.MonthlyGain)) €</label>
                            <label>Rentabilité : @((string) _ratioToStringConverter.Convert(State.Project.Profitability)) %</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div style="text-align: center; padding-left: 40%">
            <Score></Score>
        </div>

    </ion-content>
    <ion-fab slot="fixed" vertical="bottom" horizontal="end">
        <ion-fab-button @onclick="@Save">
            <ion-icon name="save-sharp"></ion-icon>
        </ion-fab-button>
    </ion-fab>
</ion-content>

<style>
    ion-slides {
        height: 100%;
    }

    ion-slide  ion-title{
        margin-top: 15px;
        padding-bottom: 30px;
    }

    ion-slide > ion-content {
        --background: linear-gradient(#F5F5F5, white);
        border: solid lightgray thin;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
        border-bottom-style: none
    }

    ion-title ion-icon{
        position: absolute;
        top: 5px;
        left: 5px;
    }

    ion-toggle {
        display: inline-block;
        margin: 0;
        padding: 0;
        height: 20px;
        width: 35px;
        position: relative;
        top: 5px;
    }

    .col-space {
        padding-right: 5px;
        padding-left: 5px;
    }

    .encare {
        padding-top: 12px; 
        border: lightgray solid 2px;
        height: 80px;
        width: 100%;
        border-radius: 10px;
        margin: 0;
    }

    .encare label{
        display: block;
        }

</style>

@code {

    private CurrentProjectState State => GetState<CurrentProjectState>();

    private AmountProperty<BuyingPrice> _buyingPrice;
    private AmountProperty<MonthlyRent> _monthlyRent;
    private AmountProperty<Charges> _charges;
    private AmountProperty<Surface> _surface;
    private AmountProperty<PropertyTax> _propertyTax;
    private AmountProperty<Renovation> _renovation;

    private AmountProperty<LoanDuration> _loanDuration;
    private RatioProperty<LoanRate> _loanRate;
    private RatioProperty<InsuranceRate> _insuranceRate;

    private StringProperty<ProjectName> _projectName;
    private StringProperty<Address> _address;

    private readonly AmountToStringConverter _amountToStringConverter = new AmountToStringConverter();
    private readonly RatioToStringConverter _ratioToStringConverter = new RatioToStringConverter();


    protected override void OnInitialized()
{
        _buyingPrice = new AmountProperty<BuyingPrice>(Mediator, BuyingPrice.From, ()=> State.Project.BuyingPrice);
        _monthlyRent = new AmountProperty<MonthlyRent>(Mediator, MonthlyRent.From, () => State.Project.MonthlyRent);
        _charges = new AmountProperty<Charges>(Mediator, Charges.From, () => State.Project.Charges);
        _surface = new AmountProperty<Surface>(Mediator, Surface.From, () => State.Project.Surface);
        _propertyTax = new AmountProperty<PropertyTax>(Mediator, PropertyTax.From, () => State.Project.PropertyTax);
        _renovation = new AmountProperty<Renovation>(Mediator, Renovation.From, () => State.Project.Renovation);

        _loanDuration = new AmountProperty<LoanDuration>(Mediator,a=> LoanDuration.From((int)a), () => State.Project.LoanDuration);
        _loanRate = new RatioProperty<LoanRate>(Mediator, LoanRate.From, ()=>State.Project.LoanRate);
        _insuranceRate = new RatioProperty<InsuranceRate>(Mediator, InsuranceRate.From, ()=>State.Project.InsuranceRate);

        _projectName = new StringProperty<ProjectName>(Mediator, ProjectName.From, () =>State.Project.Name);
        _address = new StringProperty<Address>(Mediator, Address.From, () => State.Project.Address);
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/");
    }

    public void Save()
    {
        Mediator.Send(new CurrentProjectState.Save(State.Project));
    }
}
