@using ImmoCalc.Components.Converters
@typeparam TValue

<GridElement Row="@Row" Column="1" HorizontalAlignment="@Alignment.End" VerticalAlignment="@Alignment.Center">
    <label>@Label : </label>
</GridElement>
<GridElement Row="@Row" Column="2">
    <ClearableInput ShowCents="@ShowCents" @bind-Value="@InputValue" />
</GridElement>
<GridElement Row="@Row" Column="3" HorizontalAlignment="@Alignment.Start" VerticalAlignment="@Alignment.Center">
    <label>@Currency</label>
</GridElement>
<GridElement Row="@Row" Column="4" HorizontalAlignment="@Alignment.Start">
    @AfterLabel
</GridElement>

@code {
    [Parameter]
    public string Label { get; set; }

    [Parameter]
    public int Row { get; set; }

    [Parameter]
    public string Currency { get; set; } = "€";

    [Parameter]
    public bool ShowCents { get; set; } = true;

    [Parameter]
    public RenderFragment AfterLabel { get; set; }

    private string _inputValue = string.Empty;
    private string InputValue
    {
        get => _inputValue.EndsWith(Display.DecimalSeparator)
            ? _inputValue
            : Converter.Convert(Value) as string;
        set
        {
            _inputValue = value;
            Value = (TValue)Converter.ConvertBack(value);
            ValueChanged.InvokeAsync(Value);
        }
    }

    [Parameter]
    public TValue Value { get; set; }


    [Parameter]
    public EventCallback<TValue> ValueChanged { get; set; }

    [Parameter]
    public IValueConverter Converter { get; set; }
}
